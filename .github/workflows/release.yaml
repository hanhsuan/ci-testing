name: release testing

on:
  schedule:
    - cron: '0 0 1 * *' # Run monthly on the first day of the month
  workflow_dispatch:


jobs:
  tag_release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: get ubuntu codename
      id: get_codename
      run: |
        echo "CODENAME=$(lsb_release -cs)" >> $GITHUB_ENV
        echo "Codename is $CODENAME"
    
    - name: Check if tag exists
      id: check_tag
      run: |
        if git show-ref --tags --verify --quiet "refs/tags/${CODENAME}"; then
          echo "tag_exists=true" >> $GITHUB_OUTPUT
        else
          echo "tag_exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Create tag if it does not exist
      if: steps.check_tag.outputs.tag_exists == 'false'
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        git tag ${{ steps.set_tag_name.outputs.tag_name }}
        git push origin ${{ steps.set_tag_name.outputs.tag_name }}
    
    - name: Create release if tag was created
      if: steps.check_tag.outputs.tag_exists == 'false'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        REPO_NAME=$(basename -s .git $GITHUB_REPOSITORY)
        REPO_OWNER=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)
        API_JSON=$(printf '{"tag_name":"%s","name":"%s","body":"Automated release created from tag %s","draft":false,"prerelease":false}' "$CODENAME" "$CODENAME" "$CODENAME")

        curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "$API_JSON" \
          "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/releases"
  
